{
  "$schema": "https://biomejs.dev/schemas/2.2.2/schema.json",
  // TODO: This does not seem to work
  "extends": ["./biome-all-linter-rules.jsonc"],
  "files": {
    "includes": ["**/*", "!ext/**"]
  },
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "formatter": {
    "useEditorconfig": true,
    // The above does not seem to be working yet, so let's repeat the relevant contents here
    // TODO: On Biome update see if this can be removed
    "indentStyle": "space"
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "single"
    }
  },
  "assist": {
    "actions": {
      "source": {
        // Sorting is not/poorly supported by Biome so we handle that with eslint perfectionist
        // Note: If we do ever add actions here, also add them to README VS Code editor.codeActionsOnSave
        "organizeImports": "on"
      }
    }
  },
  "linter": {
    // Base configuration for Node environment config, scripts and tests and third party code
    "rules": {
      "suspicious": {
        // This is broken; thinks a static and a normal method with the same name are overloading when they're not
        "useAdjacentOverloadSignatures": "off"
      },
      "style": {
        // Useful when used sparingly, e.g: don't double check tsconfig noUncheckedIndexedAccess
        "noNonNullAssertion": "off"
      }
    }
  },
  "overrides": [
    // Source code
    {
      "includes": ["index.*", "livery-*.ts", "src/**/*.ts", "test/**/*.ts"],
      "linter": {
        "domains": {
          "project": "all"
        },
        "rules": {
          "correctness": {
            // TypeScript is better at checking this
            "noUndeclaredVariables": "off"
          },
          "style": {
            "useConsistentMemberAccessibility": "error",
            // Don't require strict pascal case for compatibility with DOM types like HTMLElementTagNameMap
            // and we also frequently deal with third party names for Analytics properties and XML attributes, etc.
            // TODO: Only disable this check where needed; but that's painful without block level biome-ignore support
            "useNamingConvention": "off"
          }
        }
      }
    },
    // Test source code
    {
      "includes": ["test/**/*.ts"],
      "linter": {
        "domains": {
          "test": "all"
        },
        "rules": {
          "style": {
            // Naming of our test files matches the file to be tested, p.e: Foo.ts and Foo.test.ts; not foo.test.ts
            "useFilenamingConvention": "off"
          }
        }
      }
    }
  ]
}
