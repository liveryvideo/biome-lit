{
  "$schema": "https://biomejs.dev/schemas/2.2.2/schema.json",
  // Note: As this file is extended from projects, this can't extend something else
  "files": {
    "includes": ["**/*", "!ext"]
  },
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "formatter": {
    "useEditorconfig": true,
    // The above does not seem to be working yet, so let's repeat the relevant contents here
    // TODO: On Biome update see if this can be removed
    "indentStyle": "space"
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "single"
    }
  },
  "assist": {
    "actions": {
      "source": {
        // Sorting is not/poorly supported by Biome so we handle that with eslint perfectionist
        // Note: If we do ever add actions here, also add them to README VS Code editor.codeActionsOnSave
        "organizeImports": "off"
      }
    }
  },
  "linter": {
    // Enable all rules; then disable those we don't like below
    "rules": {
      "a11y": "on",
      "complexity": "on",
      "correctness": "on",
      "performance": "on",
      "security": "on",
      "style": "on",
      "suspicious": "on"
    }
  },
  "overrides": [
    // Base configuration
    {
      "includes": ["**/*", "!ext/**"],
      "linter": {
        // TODO: Disable domain specific rules (this does not work)
        // "domains": {
        //   "next": "none",
        //   "project": "none",
        //   "qwik": "none",
        //   "react": "none",
        //   "solid": "none",
        //   "test": "none",
        //   "vue": "none"
        // },
        "rules": {
          "suspicious": {
            // This is broken; thinks a static and a normal method with the same name are overloading when they're not
            "useAdjacentOverloadSignatures": "off"
          },
          "style": {
            // Useful when used sparingly, e.g: don't double check tsconfig noUncheckedIndexedAccess
            "noNonNullAssertion": "off",
            // Don't require strict pascal case for compatibility with DOM types like HTMLElementTagNameMap
            // and we also frequently deal with third party names for Analytics properties and XML attributes, etc.
            // and we use vite defines named: __NAME__
            // TODO: Use custom naming convention and only disable this check where needed
            "useNamingConvention": "off"
          }
        }
      }
    },
    // Node environment config?
    // Node scripts and configs
    {
      "includes": ["*.cjs", "*.js", "*.ts", "!index.*"],
      "linter": {
        "rules": {
          "correctness": {
            // Can be used here
            "noNodejsModules": "off"
          },
          "performance": {
            // Irrelevant for build scripts
            "useTopLevelRegex": "off"
          },
          "style": {
            // Config script commonly use default exports
            "noDefaultExport": "off"
          }
        }
      }
    },
    // Third party code
    // {
    //   "includes": ["ext/**"]
    // },
    // Source code
    {
      "includes": ["index.*", "livery-*.ts", "src/**/*.ts", "test/**/*.ts"],
      "linter": {
        "rules": {
          "correctness": {
            // TypeScript is better at checking this
            "noUndeclaredVariables": "off",
            // TypeScript is better at checking this
            "noUnusedPrivateClassMembers": "off"
          },
          "style": {
            // @typescript-eslint/prefer-readonly is better at checking this
            "useReadonlyClassProperties": "off",
            // Increase level from info to error
            "useConsistentMemberAccessibility": "error"
          }
        }
      }
    },
    // Test source code
    {
      "includes": ["test/**/*.ts"],
      "linter": {
        "domains": {
          "test": "all"
        },
        "rules": {
          "complexity": {
            // describe() will legitimately use many lines of code
            "noExcessiveLinesPerFunction": "off"
          },
          "style": {
            // Naming of our test files matches the file to be tested, p.e: Foo.ts and Foo.test.ts; not foo.test.ts
            "useFilenamingConvention": "off"
          }
        }
      }
    }
  ]
}
